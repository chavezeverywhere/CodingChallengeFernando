{"ast":null,"code":"var _jsxFileName = \"/Users/chavezeverywhere/Documents/CodingChallenge/challenge/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport groupBy from 'lodash.groupby';\nimport omit from 'lodash.omit';\nimport { requestToAPI } from './API/API';\nimport Buildings from './components/Building';\nimport './App.css';\n\nfunction App() {\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    requestToAPI().then(result => {\n      setResult(result.items);\n    });\n  }, []);\n  const buildingZones = groupBy(result, 'buildingzone');\n  const buildingZonesWithoutOther = omit(buildingZones, [\"\", \"Other Bay Area\"]);\n  const sortedBuldingZones = Object.keys(buildingZonesWithoutOther).sort();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"INDEX\"), sortedBuldingZones.map((buildingZone, index) => {\n    return /*#__PURE__*/React.createElement(Buildings, {\n      buildingZone: buildingZone,\n      buildings: buildingZonesWithoutOther[buildingZone],\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Buildings, {\n    buildingZone: \"Other Bay Area\",\n    buildings: buildingZones[\"\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Buildings, {\n    buildingZone: \"Others\",\n    buildings: buildingZones[\"\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/chavezeverywhere/Documents/CodingChallenge/challenge/src/App.js"],"names":["React","useEffect","useState","groupBy","omit","requestToAPI","Buildings","App","result","setResult","then","items","buildingZones","buildingZonesWithoutOther","sortedBuldingZones","Object","keys","sort","map","buildingZone","index"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,YAAY,GAAGK,IAAf,CAAqBF,MAAD,IAAU;AAC5BC,MAAAA,SAAS,CAACD,MAAM,CAACG,KAAR,CAAT;AACD,KAFD;AAGD,GAJQ,EAIP,EAJO,CAAT;AAMA,QAAMC,aAAa,GAAGT,OAAO,CAACK,MAAD,EAAS,cAAT,CAA7B;AACA,QAAMK,yBAAyB,GAAGT,IAAI,CAACQ,aAAD,EAAe,CAAC,EAAD,EAAI,gBAAJ,CAAf,CAAtC;AACA,QAAME,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAYH,yBAAZ,EAAuCI,IAAvC,EAA3B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGH,kBAAkB,CAACI,GAAnB,CAAuB,CAACC,YAAD,EAAcC,KAAd,KAAsB;AAC5C,wBAAO,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAED,YAAzB;AAAuC,MAAA,SAAS,EAAEN,yBAAyB,CAACM,YAAD,CAA3E;AAA2F,MAAA,GAAG,EAAEC,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAFH,eAKE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAC,gBAAxB;AAAyC,IAAA,SAAS,EAAER,aAAa,CAAC,EAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAC,QAAxB;AAAiC,IAAA,SAAS,EAAEA,aAAa,CAAC,EAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAAA;AAED,eAAeL,GAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport groupBy from 'lodash.groupby';\nimport omit from 'lodash.omit';\nimport {requestToAPI} from './API/API';\nimport Buildings from './components/Building';\nimport './App.css';\n\nfunction App() {\n\n  const [result,setResult] = useState([]);\n\n  useEffect(()=>{\n    requestToAPI().then((result)=>{\n      setResult(result.items);\n    });\n  },[]);\n\n  const buildingZones = groupBy(result, 'buildingzone');\n  const buildingZonesWithoutOther = omit(buildingZones,[\"\",\"Other Bay Area\"]);\n  const sortedBuldingZones = Object.keys(buildingZonesWithoutOther).sort();\n\n  return (\n    <div className=\"App\">\n      <h1>INDEX</h1>\n      {sortedBuldingZones.map((buildingZone,index)=>{\n        return <Buildings buildingZone={buildingZone} buildings={buildingZonesWithoutOther[buildingZone]} key={index}/>\n      })}\n      <Buildings buildingZone=\"Other Bay Area\" buildings={buildingZones[\"\"]} />\n      <Buildings buildingZone=\"Others\" buildings={buildingZones[\"\"]} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}